// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL_BRANCH")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// admin table 
model admin {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

// ----------------------------
// user's tables
// ----------------------------

// users 
model user {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user_name     String          @db.VarChar(255)
  user_last     String          @db.VarChar(255)
  email         String?
  password      String?
  isAdmin       Boolean         @default(false)
  user_shipping user_shipping[]
  user_payment  user_payment[]

  cart     cart[]
  favorite favorite[]

  order            order[]
  purchase_history purchase_history[]
  admin            admin[]
}

// user shipping info
model user_shipping {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  mobile        String?
  address_line1 String?
  address_line2 String?
  city          String?
  postal_code   Int
  country       String?

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

// user payment info
model user_payment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  payment_type String?
  provider     String?
  account_no   Int
  expiry       DateTime

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

// ----------------------------
// user's assests tables
// ----------------------------

// cart 
model cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  cart_quanity Int

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([product_id])
  @@index([user_id])
}

// favorite
model favorite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  sku_id  Int
  sku_ref product_sku @relation(fields: [sku_id], references: [id])

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([product_id])
  @@index([user_id])
  @@index([sku_id])
}

// ----------------------------
// purchase's tables
// ----------------------------

// order
model order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  order_product    order_product[]
  purchase_history purchase_history[]

  @@index([user_id])
}

// product order 
model order_product {
  id Int @id @default(autoincrement())

  order_id  Int
  order_ref order @relation(fields: [order_id], references: [id])

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  @@index([order_id])
  @@index([product_id])
}

// purchase history 
model purchase_history {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  order_id  Int
  order_ref order @relation(fields: [order_id], references: [id])

  @@index([user_id])
  @@index([order_id])
}

// ----------------------------
// products's table
// ----------------------------

// products table
model product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_name        String @db.VarChar(255)
  product_description String @db.VarChar(255)
  product_price       Float  @db.Double

  // category m-2-m
  product_category product_category[]

  // cart
  cart     cart[]
  favorite favorite[]

  order_product     order_product[]
  discount          discount[]
  review            review[]
  technical_point   technical_point[]
  image             image[]
  product_selection product_selection[]
  product_sku       product_sku[]
}

// ----------------------------
// category's table (m-2-m)
// ----------------------------

// category
model category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  category_name        String             @db.VarChar(75)
  category_description String?
  product_category     product_category[]
}

// category connection
model product_category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  category_id  Int
  category_ref category @relation(fields: [category_id], references: [id])

  @@index([product_id])
  @@index([category_id])
}

// ----------------------------
// product's assests tables
// ----------------------------

// product_selection
model product_selection {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  selection_name        String?
  selection_description String?
  selection_key         Int?

  product_id     Int
  product_ref    product          @relation(fields: [product_id], references: [id])
  product_option product_option[]

  @@index([product_id])
}

// product_option
model product_option {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  option_name        String?
  option_description String?
  option_sku         String?

  selection_id  Int
  selection_ref product_selection @relation(fields: [selection_id], references: [id])

  @@index([selection_id])
}

// ----------------------------
// product's assests tables
// ----------------------------

// discount 
model discount {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  discount_name       String  @db.VarChar(255)
  discount_desc       String  @db.VarChar(255)
  discount_percentage Decimal @db.Decimal(5, 5)
  isActive            Boolean

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  @@index([product_id])
}

// review 
model review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  review_rate    Int
  review_date    DateTime @default(now())
  review_message String?

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  user_name String @db.VarChar(75)

  @@index([product_id])
}

// technical 
model technical_point {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  point String

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  @@index([product_id])
}

// images
model image {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  image_file        String?
  image_description String?
  image_name        String?

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  @@index([product_id])
}

// ----------------------------
// product's sku tables
// ----------------------------

// sku 
model product_sku {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_sku String  @db.VarChar(10000)
  quanity     Int     @default(10)
  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  favorite favorite[]

  @@index([product_id])
}
