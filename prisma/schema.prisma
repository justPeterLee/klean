// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL_BRANCH")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// ----------------------------
// user's table
// ----------------------------

// users 
model user {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user_name String  @db.VarChar(255)
  user_last String  @db.VarChar(255)
  email     String?
  password  String?
  cart      cart[]
}

// user assests ----

// cart 
model cart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  cart_quanity Int

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  user_id  Int
  user_ref user @relation(fields: [user_id], references: [id])

  @@index([product_id])
  @@index([user_id])
}

// ----------------------------
// products's table
// ----------------------------

// products table
model product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_name        String @db.VarChar(255)
  product_description String @db.VarChar(255)
  product_price       Float  @db.Double

  // category m-2-m
  product_category product_category[]
  cart             cart[]
}

// category tables many-to-many
model category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  category_name        String             @db.VarChar(75)
  category_description String?
  product_category     product_category[]
}

// category connection
model product_category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  product_id  Int
  product_ref product @relation(fields: [product_id], references: [id])

  category_id  Int
  category_ref category @relation(fields: [category_id], references: [id])

  @@index([product_id])
  @@index([category_id])
}
